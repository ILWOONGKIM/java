■■■ 음의정수표현 ■■■

- 윈도우키 + R → 실행창 호출
- notepad 입력
- 다른이름으로 저장
  → c:\JavaStudy\음의정수표현.txt

---------------------------------------------

① 『-10』을 byte 기반 비트열로 나타낸다.
8+0+2
	  00001010 → +10

	  11110101 → 비트열반전(1의보수)
	+ 00000001 → 1을 더함(2의보수)
	-----------
	  11110110 → -10


② 『-27』을 byte 기반 비트열로 나타낸다.
16+8+0+2+1

	  00011011 → +27

	  11100100 → 비트열반전(1의보수)
	+ 00000001 → 1을 더함(2의보수)
	-----------
	  11100101 → -27



③ 『-31』을 byte 기반 비트열로 나타낸다.
16+8+4+2+1

	  00011111 → +31

	  11100000 → 비트열반전(1의보수)
	+ 00000001 → 1을 더함(2의보수)
	-----------
	  11100001 → -31



④ 『-13』을 byte 기반 비트열로 나타낸다.
8+4+0+1

	  00001101 → +13

	  11110010 → 비트열반전(1의보수)
	+ 00000001 → 1을 더함(2의보수)
	-----------
	  11110011 → -13



⑤ byte 기반의 『11001010』을 10진수 정수형으로 나타낸다.

	  11001010(2의 보수인 상태)
	- 00000001
 	----------
	  11001001(비트열 반전된 상태, 1의 보수인 상태)
 
	  00110110(비트열재반전) → 2^5+2^4+2^2+2 = 32+16+4+2 = 54


따라서 11001010의 10진수 정수형은 -54이다.



⑥ byte 기반의 『11110101』을 10진수 정수형으로 나타낸다.

	  11110101(2의보수상태)
	- 00000001
 	----------
	  11110100(비트열반전,1의보수상태)
 
	  00001011(비트열재반전) → 2^3+2+1 = 11


따라서 11110101의 10진수 정수형은 -11이다.



⑦ byte 기반의 『10000001』을 10진수 정수형으로 나타낸다.


	  10000001(2의보수상태)
	- 00000001
 	----------
	  10000000(비트열반전,1의보수상태)
 
	  01111111(비트열재반전) → 2^6+2^5+2^4+2^3+2^2+2+1 = 127



따라서 10000001의 10진수 정수형은 -127이다.



⑧ byte 기반의 『10101010』을 10진수 정수형으로 나타낸다.


	  10101010(2의보수상태)
	- 00000001
 	----------
	  10101001(비트열반전,1의보수상태)
 
	  01010110(비트열재반전) → 2^6+2^4+2^2+2 = 64+16+4+2 = 86



따라서 10000001의 10진수 정수형은 -86이다.



⑨ byte 기반의 『10000101』을 10진수 정수형으로 나타낸다.


	  10000101(2의보수상태)
	- 00000001
 	----------
	  10000100(비트열반전,1의보수상태)
 
	  01111011(비트열재반전) → 2^6+2^5+2^4+2^3+2+1 = 64+16+4+2 = 123



따라서 10000001의 10진수 정수형은 -123이다.




⑩ byte 기반의 『11111111』을 10진수 정수형으로 나타낸다.


	  11111111(2의보수상태)
	- 00000001
 	----------
	  11111110(비트열반전,1의보수상태)
 
	  00000001(비트열재반전) → 2^0 = 1



따라서 10000001의 10진수 정수형은 -1이다.



