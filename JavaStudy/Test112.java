/*==================================
  ■■■ 정렬(Sort) 알고리즘 ■■■
  - 삽입 정렬(Insert Sort)
===================================*/

/*
○ 정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
		→ 보기 좋게... 검색하기 위함

○ 정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬...

*/

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 아무 키나 누르세요...


public class Test112
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};


		System.out.print("Source Data : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();


		int i,j;
		int t;

		for (i=1; i<a.length; i++)		// i=1
		{
			t = a[i];					// t = 42
			j = i - 1;					// j=0

			while (j>=0 && a[j]>t)		// true&&true						...
			{
				a[j+1] = a[j];			//a[1] = 52		→	52 52 12 62 60
				j--;					//j=-1
			}
			
			a[j+1] = t;					// a[0]=42		→	42 52 12 62 60
		}

		// for는 정해진 범위를 돌고
		// while은 true일때 계속돔

/*
		int i, j;
		int t;

		for (i=1; i<a.length; i++)
		{
			t = a[i];		// t = 42

			for (j=0; j<i-1; j++)
			{
				if (a[i]<a[i-1])
				{
					a[i] = a[i-1];
					a[i-1] = t;			
				}

			}
		}

*/
		System.out.print("Sorted Data : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();


		/*
		52 42 12 62 60			

		52 42 12 62 60			t=42
		-- ==
		42 42 12 62 60			t=42
		-- ==
		42 52 12 62 60			t=42
		-- ==
		-------------------------------
		42 52 52 62 60			t=12
		   -- ==
		42 42 52 62 60			t=12
		-- ==
		12 42 12 62 60			t=12
	    -- ==

		기준 1번, 대상 0번째, 기준=t
		
		비교기준을 t에 넣고
		비교대상 j(i-1)에 t(비교기준)를 대입
		그다음 비교 기준에 비교 대상을 대입(j=i+1)

		비교기준 i는 1부터 4까지, t는 i가 돌때마다 값이 바뀜 for문 끝에 i=t
				 i는 1씩 늘어남(비교기준이 다음으로 넘어갈때)
				 i = 1	21	321	4321

		비교대상 j는 0부터 i-1까지, 
				 j는 1씩줄어드는데 이건 배열관계식으로 표현 (a[i]>a[i-1], i가 1부터니까)
				 
				 j = 0	10	210	3210
		*/
	}
}