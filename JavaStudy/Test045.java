/*==============================================
	■■■ 실행 흐름의 컨트롤 (제어문) ■■■
	- 반복문(while) 실습
===============================================*/

// 1부터 100까지의 정수 중에서
// 짝수들의 합과 홀수들의 합을 따로 구분하여 계산한다.
// 그리고 그 결과값을 출력하는 프로그램을 구현한다.
// 단, 반복문은 while 문을 사용할 수 있도록 하며,
// 조건 구문은 if 조건문을 사용하여 작성할 수 있도록 한다.

// 실행 예)
// 1부터 100까지의 정수 중
// 짝수의 합 : 2550
// 홀수의 합 : 2500
// 계속하려면 아무 키나 누르세요 . . .

public class Test045
{
	public static void main(String[] args)
	{
		// 주요 변수 선언
		int n=1;		//-- 1부터 100까지 1씩 증가할 변수
		int even=0;		//-- 짝수들의 누적합을 담아낼 변수
		int odd=0;		//-- 홀수들의 누적합을 담아낼 변수


		// 연산 및 처리(반복문 구성 → 홀수짝수 여부에 따른 분기)
		while(n<=100)
		{
			if (n%2==0) // 짝수인지 판별한 후 합을 누적
			{
				even += n;
			}
			else if (n%2!=0) // 홀수인지 판별 후 합을 누적
			{
				odd += n;
			}
			else
			{
				System.out.println("판별 불가 데이터");
				return; // 메소드 종료 → main() 메소드 종료 → 프로그램 종료
			}

			n++;		//-- 증감식 → 반복문의 조건을 깨뜨리게 될 구문

		}

		// 결과 출력

		System.out.println("1 부터 100 까지의 정수 중");
		System.out.println("짝수의 합 : " + even);
		System.out.println("홀수의 합 : " + odd);


	}
}

	/*(내 풀이)

		int n=0, sumA=0, sumB=0;
		
		while (n<=100)
		{
			if (n%2==0)
			{
			sumA+=n;
			}
			else if(n%2!=0)
			{
			sumB+=n;
			}
			n+=1;
		}
		System.out.printf("짝수의 합 : %d\n",sumA);
		System.out.printf("홀수의 합 : %d\n",sumB);
	*/	
	
// 실행 결과
/*
1 부터 100 까지의 정수 중
짝수의 합 : 2550
홀수의 합 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/